[tox]
envlist = py{27,34,35,36}-unittest, py{27,34,35,36}-kafka{8,9,10,11}-dockeritest
tox_pip_extensions_ext_pip_custom_platform = true
tox_pip_extensions_ext_venv_update = true

[travis]
python =
  py27: py27-unittest, py27-kafka{8,9,10,11}-dockeritest
  py34: py34-unittest, py34-kafka{8,9,10,11}-dockeritest
  py35: py35-unittest, py35-kafka{8,9,10,11}-dockeritest
  py36: py36-unittest, py36-kafka{8,9,10,11}-dockeritest

[testenv]
deps =
    -rrequirements-dev.txt
    flake8
    pytest
    mock
    dockeritest: docker-compose==1.7.0
whitelist_externals = /bin/bash
passenv = ITEST_PYTHON_FACTOR KAFKA_VERSION ACCEPTANCE_TAGS
setenv =
    py27: ITEST_PYTHON_FACTOR = py27
    py34: ITEST_PYTHON_FACTOR = py34
    py35: ITEST_PYTHON_FACTOR = py35
    py36: ITEST_PYTHON_FACTOR = py36
    kafka8: KAFKA_VERSION = 0.8.2.1
    kafka8: ACCEPTANCE_TAGS = ~kafka_offset_storage
    kafka9: KAFKA_VERSION = 0.9.0.0
    kafka9: ACCEPTANCE_TAGS = ~kafka10
    kafka10: KAFKA_VERSION = 0.10.1.1
    kafka10: ACCEPTANCE_TAGS = ~kafka9
    kafka11: KAFKA_VERSION = 1.1.0
    kafka11: ACCEPTANCE_TAGS =
commands =
    unittest: pre-commit install -f --install-hooks
    unittest: py.test -s {posargs}
    unittest: flake8 .

    dockeritest: docker-compose rm --force
    dockeritest: docker-compose build
    dockeritest: /bin/bash -c " \
    dockeritest:   docker-compose run \
    dockeritest:     -e ITEST_PYTHON_FACTOR={env:ITEST_PYTHON_FACTOR} \
    dockeritest:     -e ACCEPTANCE_TAGS={env:ACCEPTANCE_TAGS} \
    dockeritest:     itest /scripts/run_tests.sh; exit_status=$?; \
    dockeritest:   docker-compose stop; \
    dockeritest:   docker network rm kafkautils_default; \
    dockeritest:   exit $exit_status"

[testenv:coverage]
deps =
    {[testenv]deps}
    coverage
commands =
    coverage run --source kafka_utils/ -m pytest --strict {posargs}
    coverage report -m
    flake8 .

[testenv:docs]
deps =
    sphinx
    sphinx_rtd_theme
changedir = docs
commands = sphinx-build -b html -d build/doctrees source build/html

[flake8]
exclude = .svn,CVS,.bzr,.hg,.git,__pycache__,.tox,docs,virtualenv_run,.ropeproject
ignore = E501

[pytest]
norecursedirs = .* virtualenv_run

